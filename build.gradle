plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'java-library'
    id 'maven-publish'
    id 'net.minecrell.licenser' version '0.4.1'
}

group = project.maven_group
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = project.archives_base_name
Set<String> modules = [
        'fabric-key-binding-api-v1',
        'fabric-lifecycle-events-v1',
        'fabric-rendering-v1',
        'fabric-resource-loader-v0'
]

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

minecraft {
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modules.stream().map { fabricApi.module(it, project.fabric_api_version) }.forEach {
        modImplementation it
        include it
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withSourcesJar()
}

jar {
    from "LICENSE"
}

license {
    header file('HEADER')
    include '**/*.java'
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}